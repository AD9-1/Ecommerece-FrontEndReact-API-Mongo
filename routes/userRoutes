const express = require("express");
const router = express.Router();
const Users = require("../usermodel");
const jwt = require("jsonwebtoken");
const jsonkey = process.env.jsonkey;

router.post("/signup", async (req, res) => {
  console.log(req.body);
  if (
    !req.body.email ||
    !req.body.username ||
    !req.body.password ||
    req.body.email == "" ||
    req.body.username == "" ||
    req.body.password == ""
  ) {
    res.status(403).json({
      status: 403,
      message: "The fields should not be empty",
    });
  } else {
    try {
      let check = await Users.findOne({ email: req.body.email });
      if (check) {
        res.status(400).json({
          success: false,
          error: "Email id already exists in the database",
        });
      } else {
        let cart = {};
        for (i = 1; i <=40; i++) {
          cart[i] = 0;
        }
        const oneUser = new Users({
          email: req.body.email,
          username: req.body.username,
          password: req.body.password,
          cartData: cart,
        });
        console.log(oneUser);

        await oneUser.save();
        const token = jwt.sign({ id: oneUser.id }, jsonkey);
        res.status(200).json({ success: true, Token: ` ${token}` });
      }
    } catch (err) {
      res.status(500).json({ "Error happened": err });
    }
  }
});

router.post("/login", async (req, res) => {
  if (
    !req.body.email ||
    !req.body.password ||
    req.body.email == "" ||
    req.body.password == ""
  ) {
    res.status(403).json({ message: "Please fill out the details" });
  } else {
    let check = await Users.findOne({ email: req.body.email });
    if (check) {
      const passCompare = req.body.password === check.password;
      if (passCompare) {
        const token = jwt.sign({ id: check.id }, jsonkey);
        res.status(200).json({ success: true, Token: token });
      } else {
        res.status(403).json({
          failure: true,
          message: "Password did not match and no token generated",
        });
      }
    } else {
      res.status(500).json({ message: "Email id did not match" });
    }
  }
});

module.exports = router;
